---
monitors:
  enclosure:
    discovery:
      sources:
        source(1):
          # Source(1) = SNMP Table
          # ID;PhysicalDescription;Parent;Class;HardwareRev;FirmwareRev;SerialNumber;Manufacturer;Model;FRU
          type: snmpTable
          oid: 1.3.6.1.2.1.47.1.1.1.1
          selectColumns: "ID,2,4,5,8,9,11,12,13,16"
        source(2):
          # ID;type;
          type: snmpTable
          oid: 1.3.6.1.2.1.99.1.1.1
          selectColumns: "ID,1,5"
        source(3):
          # ID;PhysicalDescription;Parent;Class;HardwareRev;FirmwareRev;SerialNumber;Manufacturer;Model;FRU;SensorID;type;value;
          type: tableJoin
          leftTable: "${source::monitors.enclosure.discovery.sources.source(1)}"
          rightTable: "${source::monitors.enclosure.discovery.sources.source(2)}"
          leftKeyColumn: 1
          rightKeyColumn: 1
          defaultRightLine: ;;;
          computes:
          # Exclude sensors with status "No Longer Present
          - type: excludeMatchingLines
            column: 13
            regExp: 5
        source(4):
          # Keep Source 3 clean for other classes
          type: copy
          from: "${source::monitors.enclosure.discovery.sources.source(3)}"
          computes:
            # Keep only units of type 3 (chassis)
            # ID;PhysicalDescription;Parent;Class;HardwareRev;FirmwareRev;SerialNumber;Manufacturer;Model;FRU;SensorID;type;
          - type: keepOnlyMatchingLines
            column: 4
            valueList: 3
      mapping:
        # Instance Table
        source: "${source::monitors.enclosure.discovery.sources.source(4)}"
        attributes:
          id: _DEVICE_ID
          __display_id: $2
          vendor: $8
          model: $9
          serial_number: $7
          bios_version: $5
          type: _ENCLOSURE_TYPE
          name: "${awk::sprintf(\"Enclosure: %s (%s %s)\", $2, $8, $9)}"
    collect:
      sources:
        source(1):
          # Entity-Sensor-MIB
          # ID;type;precision;Value;State;
          type: snmpTable
          oid: 1.3.6.1.2.1.99.1.1.1
          selectColumns: "ID,1,3,4,5"
          computes:
          - type: translate
            column: 3
            translationTable: "${translation::entPhySensorPrecisionTranslationTable}"
          - type: divide
            column: 4
            value: $3
          - type: duplicateColumn
            column: 5
        source(2):
          # For use in all other classes
          type: copy
          from: "${source::monitors.enclosure.collect.sources.source(1)}"
          computes:
            # Translate state status into a Status
            # ID;type;precision;Value;PATROLStatus;StatusInformation;
          - type: translate
            column: 5
            translationTable: "${translation::SensorStatusTranslationTable}"
            # Translate the second state status into a StatusInformation
            # ID;type;precision;Value;PATROLStatus;StatusInformation;
          - type: translate
            column: 6
            translationTable: "${translation::SensorStatusInformationTranslationTable}"
      mapping:
        # No status for chassis is available therefore it is not collected.
        # ValueTable = Source(2)
        source: "${source::monitors.enclosure.collect.sources.source(2)}"
        attributes:
          id: _DEVICE_ID
  temperature:
    discovery:
      sources:
        source(1):
          # ID;PhysicalDescription;Parent;Class;HardwareRev;FirmwareRev;SerialNumber;Manufacturer;Model;FRU;SensorID;type;
          type: copy
          from: "${source::monitors.enclosure.discovery.sources.source(3)}"
          computes:
            # Keep only celcius(8) (temperature sensors)
            # ID;PhysicalDescription;Parent;Class;HardwareRev;FirmwareRev;SerialNumber;Manufacturer;Model;FRU;SensorID;type;
          - type: keepOnlyMatchingLines
            column: 12
            valueList: 8
      mapping:
        # Instance Table
        source: "${source::monitors.temperature.discovery.sources.source(1)}"
        attributes:
          id: $11
          __display_id: $2
          hw.parent.type: enclosure
          hw.parent.id: _DEVICE_ID
          name: $2
    collect:
      # Collect type = multi-instance
      type: multiInstance
      keys:
      - id
      mapping:
        source: "${source::monitors.enclosure.collect.sources.source(2)}"
        attributes:
          id: $1
        metrics:
          hw.temperature: $4
          hw.status{hw.type="temperature"}: $5
        legacyTextParameters:
          StatusInformation: $6
  voltage:
    discovery:
      sources:
        source(1):
          # ID;PhysicalDescription;Parent;Class;HardwareRev;FirmwareRev;SerialNumber;Manufacturer;Model;FRU;SensorID;type;
          type: copy
          from: "${source::monitors.enclosure.discovery.sources.source(3)}"
          computes:
          # Keep Voltages (voltsAC, voltsDC)
          - type: keepOnlyMatchingLines
            column: 12
            valueList: "3,4"
      mapping:
        # InstanceTable = Source(1)
        source: "${source::monitors.voltage.discovery.sources.source(1)}"
        attributes:
          id: $11
          __display_id: $2
          sensor_location: $2
          hw.parent.type: enclosure
          hw.parent.id: _DEVICE_ID
          name: "${awk::sprintf(\"%s (%s)\", $2, $2)}"
    collect:
      # Collect type = multi-instance
      type: multiInstance
      keys:
      - id
      sources:
        source(1):
          type: copy
          from: "${source::monitors.enclosure.collect.sources.source(2)}"
          computes:
          # Volts into mV
          - type: multiply
            column: 4
            value: 1000
      mapping:
        # Value Table
        source: "${source::monitors.voltage.collect.sources.source(1)}"
        attributes:
          id: $1
        metrics:
          hw.voltage: $4
          hw.status{hw.type="voltage"}: $5
        legacyTextParameters:
          StatusInformation: $6
  fan:
    discovery:
      sources:
        source(1):
          # ID;PhysicalDescription;Parent;Class;HardwareRev;FirmwareRev;SerialNumber;Manufacturer;Model;FRU;SensorID;type;
          type: copy
          from: "${source::monitors.enclosure.discovery.sources.source(3)}"
          computes:
            # Keep only Fan sensors
            # ID;PhysicalDescription;Parent;Class;HardwareRev;FirmwareRev;SerialNumber;Manufacturer;Model;FRU;SensorID;type;
          - type: keepOnlyMatchingLines
            column: 12
            valueList: 10
            # Substract 11 from ID to get FRU Parent
            # ID;PhysicalDescription;Parent;Class;HardwareRev;FirmwareRev;SerialNumber;Manufacturer;Model;FRU;SensorID;type;
          - type: awk
            script: "${file::embeddedFile-1}"
        source(2):
          # ID;PhysicalDescription;Parent;Class;HardwareRev;FirmwareRev;SerialNumber;Manufacturer;Model;FRU;SensorID;type;value;
          type: tableJoin
          leftTable: "${source::monitors.fan.discovery.sources.source(1)}"
          rightTable: "${source::monitors.enclosure.discovery.sources.source(3)}"
          leftKeyColumn: 1
          rightKeyColumn: 1
          computes:
          - type: keepColumns
            columnNumbers: "14,15,16,17,18,19,20,21,22,23,24,25"
          - type: leftConcat
            column: 9
            value: "Model: "
          - type: leftConcat
            column: 8
            value: "Manufacturer: "
          - type: leftConcat
            column: 7
            value: "Serial Number: "
      mapping:
        # Instance Table
        source: "${source::monitors.fan.discovery.sources.source(2)}"
        attributes:
          id: $1
          __display_id: $2
          info: "${awk::join(\" \", $7, $8, $9)}"
          hw.parent.type: enclosure
          hw.parent.id: _DEVICE_ID
          name: $2
    collect:
      # Collect type = multi-instance
      type: multiInstance
      keys:
      - id
      sources:
        source(1):
          type: copy
          from: "${source::monitors.enclosure.collect.sources.source(2)}"
          computes:
          # Substract 11 from ID to get FRU Parent
          - type: awk
            script: "${file::embeddedFile-1}"
      mapping:
        # ValueTable = Enclosure.Collect.Source(1)
        source: "${source::monitors.fan.collect.sources.source(1)}"
        attributes:
          id: $1
        metrics:
          hw.fan.speed: $4
          hw.status{hw.type="fan"}: $5
        legacyTextParameters:
          StatusInformation: $6
translations:
  SensorStatusTranslationTable:
    "1": ok
    "2": degraded
    default: UNKNOWN
    "3": failed
    "4": failed
    "5": failed
    "6": failed
  SensorStatusInformationTranslationTable:
    "1": ""
    "2": Warning
    default: Unknown Status
    "3": Critical
    "4": Shutdown
    "5": No Longer Present
    "6": Not Functioning
  entPhySensorPrecisionTranslationTable:
    "1": 10
    default: 1
    "2": 100
    "3": 1000

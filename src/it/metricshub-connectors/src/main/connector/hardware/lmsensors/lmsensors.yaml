---
extends:
- ../Hardware/Hardware
connector:
  displayName: lm_sensors
  platforms: Linux
  reliesOn: lm_sensors
  information: "Provides the monitoring environment sensors on Linux, through the sensors command."
  version: 1.1
  detection:
    connectionTypes:
    - remote
    - local
    appliesTo:
    - Linux
    criteria:
    - type: deviceType
      keep:
      - Linux
    - type: osCommand
      commandLine: "%{SUDO:/usr/bin/sensors} /usr/bin/sensors -h"
      expectedResult: "Usage: sensors "
      errorMessage: lm_sensors is not installed on this server.
sudoCommands:
- /usr/sbin/dmidecode
- /usr/bin/sensors
monitors:
  enclosure:
    discovery:
      sources:
        source(1):
          # Discovery Enclosure
          type: osCommand
          commandLine: "%{SUDO:/usr/sbin/dmidecode} /usr/sbin/dmidecode -t system"
          computes:
          # '"MSHW;"Manufacturer";"Type";"SN";"'
          - type: awk
            script: "${file::embeddedFile-1}"
            keep: ^MSHW;
            separators: ;
        source(2):
          type: osCommand
          commandLine: "%{SUDO:/usr/sbin/dmidecode} /usr/sbin/dmidecode -t bios"
          computes:
          # '"MSHW;"Bios Info"'
          - type: awk
            script: "${file::embeddedFile-2}"
            keep: ^MSHW;
            separators: ;
        source(3):
          # '"MSHW;"Manufacturer";"Type";"SN";"'
          type: tableJoin
          leftTable: "${source::monitors.enclosure.discovery.sources.source(1)}"
          rightTable: "${source::monitors.enclosure.discovery.sources.source(2)}"
          leftKeyColumn: 1
          rightKeyColumn: 1
      mapping:
        # Enclosure Instance Table
        # "MSHW;"Name";"Type";"SN";""MSHW;"Bios Info"
        source: "${source::monitors.enclosure.discovery.sources.source(3)}"
        attributes:
          id: Computer
          __display_id: $3
          vendor: $2
          type: Computer
          serial_number: $4
          bios_version: $6
          name: "${awk::sprintf(\"Computer: %s (%s)\", $3, $2)}"
  temperature:
    discovery:
      sources:
        source(1):
          # Discovery Temperature
          type: osCommand
          commandLine: "%{SUDO:/usr/bin/sensors} /usr/bin/sensors -u -A"
          computes:
          - type: awk
            script: "${file::embeddedFile-3}"
            keep: ^MSHW;
            separators: ;
      mapping:
        # Temperature Instance Table
        # "MSHW;"Name";"Type";"Value";"Max";"Critical";"
        source: "${source::monitors.temperature.discovery.sources.source(1)}"
        attributes:
          id: $2
          __display_id: $2
          hw.parent.type: enclosure
          hw.parent.id: Computer
          name: $2
        metrics:
          hw.temperature.limit{limit_type="high.degraded"}: $5
          hw.temperature.limit{limit_type="high.critical"}: $6
    collect:
      # Collection Type
      type: multiInstance
      keys:
      - id
      sources:
        source(1):
          type: osCommand
          commandLine: "%{SUDO:/usr/bin/sensors} /usr/bin/sensors -u -A"
          computes:
          - type: awk
            script: "${file::embeddedFile-3}"
            keep: ^MSHW;
            separators: ;
      mapping:
        # Temperature Value Table
        # "MSHW;"Name";"Type";"Value";"Max";"Critical";"
        source: "${source::monitors.temperature.collect.sources.source(1)}"
        attributes:
          id: $2
        metrics:
          hw.temperature: $4
  voltage:
    discovery:
      sources:
        source(1):
          # Discovery Voltage
          type: osCommand
          commandLine: "%{SUDO:/usr/bin/sensors} /usr/bin/sensors -A"
          computes:
          - type: awk
            script: "${file::embeddedFile-4}"
            keep: ^MSHW;
            separators: ;
      mapping:
        # Voltage Instance Table
        # "MSHW;"Name";"Type";"Value";Lower";"Upper";"
        source: "${source::monitors.voltage.discovery.sources.source(1)}"
        attributes:
          id: $2
          __display_id: $2
          sensor_location: Planar
          hw.parent.type: enclosure
          hw.parent.id: Computer
          name: "${awk::sprintf(\"%s (%s)\", $2, \"Planar\")}"
        metrics:
          hw.voltage.limit{limit_type="low.critical"}: $5
          hw.voltage.limit{limit_type="high.degraded"}: $6
    collect:
      # Collection Type
      type: multiInstance
      keys:
      - id
      sources:
        source(1):
          type: osCommand
          commandLine: "%{SUDO:/usr/bin/sensors} /usr/bin/sensors -A"
          computes:
          - type: awk
            script: "${file::embeddedFile-4}"
            keep: ^MSHW;
            separators: ;
      mapping:
        # Voltage Value Table
        # "MSHW;"Name";"Type";"Value";
        source: "${source::monitors.voltage.collect.sources.source(1)}"
        attributes:
          id: $2
        metrics:
          hw.voltage: $4
  fan:
    discovery:
      sources:
        source(1):
          # Discovery FAN
          type: osCommand
          commandLine: "%{SUDO:/usr/bin/sensors} /usr/bin/sensors -u -A"
          computes:
          - type: awk
            script: "${file::embeddedFile-5}"
            keep: ^MSHW;
            separators: ;
      mapping:
        # FAN Instance Table
        # ""MSHW;"DName"-"FName";"Value";"Min";"Max";"Alarm";"
        source: "${source::monitors.fan.discovery.sources.source(1)}"
        attributes:
          id: $2
          __display_id: $2
          sensor_location: Planar
          hw.parent.type: enclosure
          hw.parent.id: Computer
          name: "${awk::sprintf(\"%s (%s)\", $2, \"Planar\")}"
        metrics:
          hw.fan.speed.limit{limit_type="low.degraded"}: $5
          hw.fan.speed.limit{limit_type="low.critical"}: $6
    collect:
      # Collection Type
      type: multiInstance
      keys:
      - id
      sources:
        source(1):
          type: osCommand
          commandLine: "%{SUDO:/usr/bin/sensors} /usr/bin/sensors -u -A"
          computes:
          - type: awk
            script: "${file::embeddedFile-5}"
            keep: ^MSHW;
            separators: ;
      mapping:
        # Voltage Value Table
        # "MSHW;"Name";"Type";"Value";
        source: "${source::monitors.fan.collect.sources.source(1)}"
        attributes:
          id: $2
        metrics:
          hw.fan.speed: $3
